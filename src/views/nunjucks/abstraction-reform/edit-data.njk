{% extends "./nunjucks/layout.njk" %}
{% from "inset-text/macro.njk" import govukInsetText %}
{% from "forms/header.njk" import formHeader %}
{% from "forms/footer.njk" import formFooter %}
{% from "forms/widget.njk" import formWidget %}




{% block content %}

  {{ formErrorSummary(form) }}

  {{ title(pageTitle) }}

  <div class="govuk-grid-row">
      <div class="govuk-grid-column-two-thirds">

        <h2 class="govuk-heading-m">{{ schema.title }} {{ schema.category }}</h2>

        {% set html = schema.description | ARConditionPlaceholder | safe %}

        {{ govukInsetText({
          html: html
        }) }}

      {{ formRender(form) }}
    </div>
  </div>




{% endblock %}

{% block bodyEnd %}
<script
  src="https://code.jquery.com/jquery-3.3.1.min.js"
  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
  crossorigin="anonymous"></script>
<script nonce="{{nonces.script}}">


/**
 * Gets dropdown or radio field value
 * @param  {String} name - select/radio button attribute
 * @return {String}      value
 */
function getFieldValue(name) {
  const $field = $('[name=' + name + ']');
  if($field.prop('tagName') === 'SELECT') {
    return $field.val();
  }
  if($field.prop('tagName') === 'INPUT' && $field.attr('type') === 'radio') {
    return $('[name=' + name + ']:checked').val();
  }
}



/**
 * Tests whether the field should be visible
 * @param {Object} ele - the HTML element
 */
function test(ele) {
  // Get toggle data
  var toggle = JSON.parse($(ele).attr('data-toggle'));
  var result = false;
  for(var key in toggle) {
    var val = getFieldValue(key);
    result = result || (val === toggle[key]);
  }
  return result;
}


/**
 * Refreshes state of form to show/hide conditional elements
 */
const refreshForm = function() {
  $('[data-toggle]').each(function(i, ele) {
    var isVisible = test(ele);
    $(ele).parent('.govuk-form-group').toggle(isVisible);
  });
}

$(function() {
  refreshForm();
  $('input, select').on('change', refreshForm);
});
</script>
{% endblock %}
