{% extends "./nunjucks/layout.njk" %}
{% from "badge.njk" import badge %}
{% from "paginate.njk" import paginate %}
{% from "./nunjucks/billing/macros/batch-metadata.njk" import batchMetadata %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}

{% from "./nunjucks/billing/macros/totals.njk" import chargeOrDash %}
{% from "./nunjucks/billing/macros/batch-title.njk" import batchTitle %}
{% from "./nunjucks/billing/macros/batch-buttons.njk" import removeLicenceFromBatchButton %}
{% from "./nunjucks/billing/macros/two-part-tariff-review-quantities.njk" import authorisedQuantity, billableQuantity, reportedVolume, billableVolume %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/details/macro.njk" import govukDetails %}

{% macro metaRow(key, value, includePadding) %}
  <div class="meta__row">
    <dt class="meta__key">{{ key }}</dt>
    <dd class="meta__value{% if includePadding %} govuk-!-padding-bottom-3{% endif %}">{{ value }}</dd>
  </div>
{% endmacro %}

{% block content %}
  <div class="govuk-grid-row govuk-!-margin-bottom-0">
    <div class="govuk-grid-column-two-thirds">
      {{ batchTitle(pageTitle, batch) }}
     
      {% set summaryHtml %}
        <dl class="meta">
          {% for condition in aggregateConditions %}
            {{ metaRow('Aggregate condition', condition.title) }}
            {{ metaRow(condition.parameter1Label, condition.parameter1) }}
            {{ metaRow(condition.parameter2Label, condition.parameter2, not condition.text) }}
            {% if condition.text %}
              {{ metaRow('Other information', condition.text, true) }}
            {% endif %}
          {% endfor %}    
        </dl>

        <p>
          <a href="{{ returnsLink }}">View returns summary</a>
        </p>
      {% endset %}
      </div>
    </div>

    <div class="govuk-grid-row">
      <div class="govuk-grid-column-full">
        {{ govukDetails({
        summaryText: "Licence details",
        html: summaryHtml
      }) }}
      </div>
    </div>
      {{ removeLicenceFromBatchButton(batch, licence) }}
      {% for billingVolumes in billingVolumeGroups %}
        {% for billingVolume in billingVolumes %}
          <div class="govuk-grid-row govuk-!-margin-bottom-0">
          <div class="govuk-grid-column-full">
          {{ govukTable({
            firstCellIsHeader: true, 
            rows: [
              [ { text: "Issue", classes: "thick_black_underline" }, { text: billingVolume.error, classes: "thick_black_underline"  }, { text: "", classes: "thick_black_underline" } ],
              [ { text: "Billable returns" }, 
                { text: billableVolume(billingVolume) }, 
                { html: "<a href=" + billingVolume.editLink + ">
                            Change
                            <span class='govuk-visually-hidden'>
                              element "
                              + billingVolume.chargeElement.description +
                            "</span>
                          </a>"
                }
              ],
              [ { text: "Reported returns", classes: "thick_black_underline"  }, { text: reportedVolume(billingVolume), classes: "thick_black_underline" }, { text: "", classes: "thick_black_underline"  } ],
              [ { text: "Billing Account" }, { text: billingVolume.invoiceAccount.accountNumber }, { text: "" } ],
              [ { text: "Purpose" }, { text: billingVolume.chargeElement.purposeUse.name }, { text: "" } ],
              [ { text: "Description" }, { text: billingVolume.chargeElement.description }, { text: "" } ],
              [ { text: "Charge period" }, { text: billingVolume.chargePeriod.startDate | date + " to " + billingVolume.chargePeriod.endDate | date }, { text: "" } ],
              [ { text: "Abstraction period" }, { text: billingVolume.chargeElement.abstractionPeriod | abstractionPeriod }, { text: "" } ],
              [ { text: "Annual quantities" }, 
                { html: authorisedQuantity(billingVolume.chargeElement) + "<br>" +
                        billableQuantity(billingVolume.chargeElement)
                        },
                { text: "" }
              ],
              [ { text: "Source" }, { text: billingVolume.chargeElement.source}, { text: "" } ],
              [ { text: "Season" }, { text: billingVolume.chargeElement.season }, { text: "" } ],
              [ { text: "Loss" }, { text: billingVolume.chargeElement.loss }, { text: "" } ]
            ]
          }) }}
          </div>
        </div>
      {% endfor %}
    {% endfor %}
      
{% endblock %}
